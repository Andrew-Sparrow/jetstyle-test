{"version":3,"sources":["const.js","store/actions.js","components/book/book.jsx","store/api-actions.js","components/book/book.prop.js","components/pagination/pagination.jsx","components/book-list/book-list.jsx","components/layout/layout.jsx","components/hocs/with-layout.jsx","util/util.js","store/books/books.js","store/root-reducer.js","store/books/selectors.js","components/tabs/tabs.jsx","components/main-empty/main-empty.jsx","components/main/main.jsx","components/not-found/not-found.jsx","components/loading-screen/loading-screen.jsx","components/app/app.jsx","browser-history.js","store/middlewares/redirect.js","reportWebVitals.js","index.js","services/api.js"],"names":["AppRoute","groupList","groupNames","APIRoute","ActionType","changeGroup","createAction","groupName","payload","loadBooks","books","changeFavoriteAction","id","favorite","deleteItemAction","url","Book","props","title","author","group","img","dispatch","useDispatch","className","src","alt","type","onClick","evt","isFavorite","_getState","api","patch","then","info","data","catch","err","addToFavoriteApi","width","height","style","stroke","xlinkHref","preventDefault","delete","deleteItemApi","PropTypes","shape","number","isRequired","string","oneOfType","oneOf","Pagination","pageCount","onPageNumberClick","forcePage","previousLabel","nextLabel","breakLabel","breakClassName","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","activeClassName","prevTabName","prevBooks","ContactList","items","initialPageNumber","activeTabName","activeBooks","selectedItemsOnFirstPage","slice","pagesTotalAmount","Math","ceil","length","slicedItems","useReducer","state","action","pageNumber","Error","useEffect","map","book","dataPagination","offset","selected","Layout","children","withLayout","Component","displayName","Util","getFilteredBooks","activeGroup","filter","item","getFavoritesBooks","formatDate","dateString","Date","toLocaleDateString","year","month","generateIdKeys","listLength","Array","fill","nanoid","getUpdatedBooks","newBooks","index","findIndex","deleteItem","splice","createReducer","isDataLoaded","activeGroupName","builder","addCase","NameSpace","combineReducers","getBooks","getIsDataLoaded","getActiveGroupName","Tabs","useSelector","handleTabClick","currentTarget","dataset","city","to","MainEmpty","withLayoutMain","filteredBooks","withLayoutNotFound","margin","textAlign","LoadingScreen","App","exact","path","browserHistory","createBrowserHistory","redirect","_store","next","push","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","axiosInstance","axios","create","baseURL","timeout","defaults","headers","post","interceptors","response","use","getAxiosInstance","store","configureStore","reducer","rootReducer","middleware","getDefaultMiddleware","thunk","extraArgument","concat","get","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.79d7a253.chunk.js","sourcesContent":["export const AppRoute = {\n  MAIN: '/',\n};\n\nexport const defaultImg = 'https://iupac.org/wp-content/uploads/2018/05/default-avatar.png';\n\nexport const groupList = [\n  'All',\n  'Favorites'\n];\n\nexport const groupNames = {\n  ALL: 'All',\n  FAVORITES: 'Favorites',\n}\n\nexport const APIRoute = {\n  BOOKS: '/books',\n  FAVORITE: 'favorite',\n  GROUPS: '/groups',\n};\n","import {createAction} from '@reduxjs/toolkit';\r\n\r\nexport const ActionType = {\r\n  CHANGE_GROUP: 'books/changeGroup',\r\n  LOAD_BOOKS: 'books/loadBooks',\r\n  CHANGE_FAVORITE: 'books/isFavorite',\r\n  DELETE_ITEM: 'books/delete',\r\n  REDIRECT_TO_ROUTE: 'places/redirectToRoute',\r\n};\r\n\r\nexport const changeGroup = createAction(\r\n  ActionType.CHANGE_GROUP,\r\n  (groupName) => ({payload: groupName})\r\n);\r\n\r\nexport const loadBooks = createAction(\r\n  ActionType.LOAD_BOOKS,\r\n  (books) => ({payload: books})\r\n);\r\n\r\nexport const changeFavoriteAction = createAction(\r\n  ActionType.CHANGE_FAVORITE,\r\n  (id, favorite) => ({payload: {id, favorite}})\r\n)\r\n\r\nexport const deleteItemAction = createAction(\r\n  ActionType.DELETE_ITEM,\r\n  (id) => ({payload: id})\r\n);\r\n\r\nexport const redirectToRoute = createAction(\r\n  ActionType.REDIRECT_TO_ROUTE,\r\n  (url) => ({payload: url})\r\n);\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {useDispatch} from 'react-redux';\n\nimport {defaultImg} from '../../const';\nimport {addToFavoriteApi, deleteItemApi} from '../../store/api-actions';\n\nfunction Book(props) {\n  const {\n    id,\n    title,\n    author,\n    group,\n    img,\n    favorite\n  } = props;\n\n  const dispatch = useDispatch();\n\n  const onFavoriteClick = (evt) => {\n    dispatch(addToFavoriteApi(id, !favorite));\n  };\n\n  const onDeleteClick = (evt) => {\n    evt.preventDefault();\n    dispatch(deleteItemApi(id));\n  };\n\n  return (\n    <li\n      className=\"contact\"\n      id={id}\n    >\n      <img className=\"contact__left\" src={img === null ? defaultImg : img} alt=\"avatar\"></img>\n      <div className=\"contact__right\">\n        <p className=\"contact__data\">Book Title: <span className=\"contact__name\">{title}</span></p>\n        <p className=\"contact__data\">Author: <span className=\"contact__name\">{author}</span></p>\n        <p className=\"contact__data\">Group: <span className=\"contact__name\">{group}</span></p>\n      </div>\n      <div className=\"contact__buttons\">\n        <button className=\"contact__bookmark-button button\" type=\"button\" onClick={onFavoriteClick}>\n          <svg className=\"contact__bookmark-icon\" width=\"30\" height=\"30\" style={{stroke: favorite && '#4481c3'}}>\n            <use xlinkHref=\"#icon-bookmark\"></use>\n          </svg>\n          <span className=\"visually-hidden\">Add to bookmarks</span>\n        </button>\n        <button className=\"contact__bookmark-button button\" type=\"button\">\n          <svg className=\"contact__edit-icon\" width=\"30\" height=\"30\">\n            <use xlinkHref=\"#icon-pencil\"></use>\n          </svg>\n          <span className=\"visually-hidden\">Edit</span>\n        </button>\n        <button className=\"contact__bookmark-button button\" type=\"button\" onClick={onDeleteClick}>\n          <svg className=\"contact__bookmark-icon\" width=\"30\" height=\"30\">\n            <use xlinkHref=\"#icon-delete\"></use>\n          </svg>\n          <span className=\"visually-hidden\">Delete</span>\n        </button>\n      </div>\n    </li>\n  );\n}\n\nBook.propTypes = {\n  'id': PropTypes.number.isRequired,\n  'title': PropTypes.string.isRequired,\n  'author': PropTypes.string.isRequired,\n  \"img\": PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.oneOf([null]),\n  ]),\n  \"group\": PropTypes.string,\n};\n\nexport default Book;\n","import {\r\n  loadBooks,\r\n  changeFavoriteAction,\r\n  deleteItemAction,\r\n} from './actions';\r\n\r\nimport {APIRoute} from '../const';\r\n\r\nexport const fetchBooksList = () => (dispatch, _getState, api) => (\r\n  api.get(APIRoute.BOOKS)\r\n    .then(({data}) => {\r\n      dispatch(loadBooks(data));\r\n    })\r\n    .catch((err) => {})\r\n);\r\n\r\nexport const addToFavoriteApi = (id, isFavorite) => (dispatch, _getState, api) => (\r\n  api.patch(`${ APIRoute.BOOKS }/${ id }`, {favorite: isFavorite})\r\n    .then((info) => {\r\n      dispatch(changeFavoriteAction(id, info.data.favorite));\r\n    })\r\n    .catch((err) => {})\r\n);\r\n\r\nexport const deleteItemApi = (id) => (dispatch, _getState, api) => (\r\n  api.delete(`${ APIRoute.BOOKS }/${ id}`)\r\n    .then((info) => {\r\n      dispatch(deleteItemAction(id));\r\n    })\r\n    .catch((err) => {})\r\n);\r\n","import PropTypes from 'prop-types';\n\nexport default PropTypes.shape({\n  'id': PropTypes.number.isRequired,\n  'title': PropTypes.string.isRequired,\n  'author': PropTypes.string.isRequired,\n  \"img\": PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.oneOf([null]),\n  ]),\n  \"group\": PropTypes.string,\n});\n","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nimport ReactPaginate from 'react-paginate';\r\n\r\nconst Pagination = (props) => {\r\n  const {\r\n    pageCount,\r\n    onPageNumberClick,\r\n    forcePage\r\n  } = props;\r\n\r\n  return (\r\n    <ReactPaginate\r\n      previousLabel={'previous'}\r\n      nextLabel={'next'}\r\n      breakLabel={'...'}\r\n      breakClassName={'break-me'}\r\n      pageCount={pageCount}\r\n      marginPagesDisplayed={2}\r\n      pageRangeDisplayed={3}\r\n      onPageChange={onPageNumberClick}\r\n      containerClassName={'pagination'}\r\n      activeClassName={'active'}\r\n      forcePage={forcePage}\r\n    />\r\n  );\r\n};\r\n\r\nPagination.propTypes = {\r\n  pageCount: PropTypes.number.isRequired,\r\n  onPageNumberClick: PropTypes.func.isRequired,\r\n  forcePage: PropTypes.number,\r\n};\r\n\r\nexport default Pagination;\r\n","// import React, {useState} from 'react';\r\nimport React, {useReducer, useEffect} from 'react';\r\nimport {Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Book from '../book/book';\r\nimport contactProp from '../book/book.prop';\r\nimport Pagination from '../pagination/pagination';\r\n\r\nconst FIRST_PAGE_NUMBER = 0; // the initialPageNumber starts with zero\r\nconst ITEMS_PER_PAGE = 3;\r\nlet prevTabName = '';\r\nlet prevBooks = [];\r\n\r\nfunction ContactList(props) {\r\n  const {\r\n    items,\r\n    initialPageNumber,\r\n    activeTabName,\r\n    activeBooks\r\n  } = props;\r\n\r\n  const selectedItemsOnFirstPage = items.slice(0, ITEMS_PER_PAGE);\r\n  const pagesTotalAmount = Math.ceil(items.length / ITEMS_PER_PAGE);\r\n\r\n  let slicedItems = selectedItemsOnFirstPage;\r\n\r\n  const init = (initialPageNumber) => {\r\n    return {\r\n      pageNumber: initialPageNumber,\r\n      slicedItems: slicedItems\r\n    };\r\n  }\r\n\r\n  const reducer = (state, action) => {\r\n    switch (action.type) {\r\n      case 'changePageNumber':\r\n        return {...state, pageNumber: action.payload};\r\n      case 'changeSlicedItems':\r\n        return {...state, slicedItems: action.payload};\r\n      default:\r\n        throw new Error();\r\n    }\r\n  }\r\n\r\n  const [state, dispatch] = useReducer(reducer, initialPageNumber, init);\r\n\r\n  useEffect(() => {\r\n    if (prevTabName !== activeTabName || prevBooks !== activeBooks) {\r\n      dispatch({type: 'changeSlicedItems', payload: []});\r\n      dispatch({type: 'changeSlicedItems', payload: slicedItems});\r\n      dispatch({type: 'changePageNumber', payload: FIRST_PAGE_NUMBER});\r\n    }\r\n    prevTabName = activeTabName;\r\n    prevBooks = activeBooks;\r\n  }, [activeTabName, slicedItems, activeBooks]);\r\n\r\n\r\n  const pageNumberClickHandler = (dataPagination) => {\r\n    let offset = Math.ceil(dataPagination.selected * ITEMS_PER_PAGE);\r\n    slicedItems = items.slice(offset, offset + ITEMS_PER_PAGE);\r\n    dispatch({type: 'changePageNumber', payload: dataPagination.selected});\r\n    dispatch({type: 'changeSlicedItems', payload: slicedItems});\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <ul className=\"cities__places-list places__list tabs__content\">\r\n        {state.slicedItems.map((book) => (\r\n          <Book\r\n            key={book.id}\r\n            id={book.id}\r\n            title={book.title}\r\n            author={book.author}\r\n            group={book.group}\r\n            img={book.img}\r\n            favorite={book.favorite}\r\n          />\r\n        ))}\r\n      </ul>\r\n      {/* comparison was added to don't show pagination if there are too little amount of items in list */}\r\n      {items.length > ITEMS_PER_PAGE && <Pagination\r\n        pageCount={pagesTotalAmount}\r\n        onPageNumberClick={pageNumberClickHandler}\r\n        forcePage={state.pageNumber}\r\n      />}\r\n    </ Fragment>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  items: PropTypes.arrayOf(contactProp),\r\n  initialPageNumber: PropTypes.number,\r\n  activeTabName: PropTypes.string,\r\n  activeState: PropTypes.array,\r\n  onListItemHover: PropTypes.func,\r\n};\r\n\r\nexport default ContactList;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Layout(props) {\n  const {children, className} = props;\n\n  return (\n    <div className={className}>\n      <header className=\"header\">\n        <div className=\"container\">\n          <div className=\"header__wrapper\">\n            <div className=\"header__left\">\n              <h2 className=\"header__title\">Books</h2>\n            </div>\n          </div>\n        </div>\n      </header>\n      {children}\n    </ div>\n  );\n}\n\nLayout.propTypes = {\n  children: PropTypes.object,\n  className: PropTypes.string,\n};\n\nexport default Layout;\n","import React from 'react';\nimport Layout from '../layout/layout';\n\nconst withLayout = (Component, className) =>\n  function wrapper(props) {\n    return (\n      <Layout className={className}>\n        <Component {...props} />\n      </Layout>\n    );\n  };\n\nwithLayout.displayName = 'withLayout';\n\nexport default withLayout;\n","import nanoid from 'nanoid';\r\nimport {groupNames} from '../const';\r\n\r\nconst Util = {\r\n  getFilteredBooks (activeGroup, books) {\r\n    let filteredBooks = [];\r\n    if (activeGroup === groupNames.ALL) {\r\n      return books;\r\n    }\r\n    filteredBooks = books.filter((item) => item.group === activeGroup);\r\n    return filteredBooks;\r\n  },\r\n\r\n  getFavoritesBooks(activeGroup, books) {\r\n    let favoritesBooks = [];\r\n    if (activeGroup === groupNames.ALL) {\r\n      return books;\r\n    }\r\n    favoritesBooks = books.filter((item) => item.favorite === true);\r\n    return favoritesBooks;\r\n  },\r\n\r\n  formatDate (dateString) {\r\n    const DATE_OPTIONS = {year: 'numeric', month: 'short'};\r\n\r\n    return (new Date(dateString)).toLocaleDateString('en-US', DATE_OPTIONS);\r\n  },\r\n\r\n  generateIdKeys(listLength) {\r\n    const list = new Array(listLength).fill('');\r\n    const generatedIdList = list.map(() => nanoid(10));\r\n    return generatedIdList;\r\n  },\r\n\r\n  getUpdatedBooks(id, books, favorite) {\r\n    const newBooks = [...books];\r\n    const index = newBooks.findIndex((book) => book.id === id);\r\n    newBooks[index].favorite = favorite;\r\n    return newBooks;\r\n  },\r\n\r\n  deleteItem(id, items) {\r\n    const newBooks = [...items];\r\n    const index = newBooks.findIndex((item) => item.id === id);\r\n    newBooks.splice(index, 1);\r\n    return newBooks;\r\n  }\r\n}\r\n\r\nexport default Util;\r\n","import {createReducer} from '@reduxjs/toolkit';\r\nimport Util from '../../util/util';\r\n\r\nimport {\r\n  changeGroup,\r\n  loadBooks,\r\n  changeFavoriteAction,\r\n  deleteItemAction\r\n} from '../actions';\r\n\r\nconst initialState = {\r\n  books: [],\r\n  isDataLoaded: false,\r\n  activeGroupName: 'All',\r\n};\r\n\r\nconst books = createReducer(initialState, (builder) => {\r\n  builder\r\n    .addCase(changeGroup, (state, action) => {\r\n      state.activeGroupName = action.payload;\r\n    })\r\n    .addCase(loadBooks, (state, action) => {\r\n      state.books = action.payload;\r\n      state.isDataLoaded = true;\r\n    })\r\n    .addCase(changeFavoriteAction, (state, action) => {\r\n      state.books = Util.getUpdatedBooks(action.payload.id, state.books, action.payload.favorite);\r\n      return state;\r\n    })\r\n    .addCase(deleteItemAction, (state, action) => {\r\n      state.books = Util.deleteItem(action.payload, state.books);\r\n    })\r\n});\r\n\r\nexport {books};\r\n","import {combineReducers} from 'redux';\nimport {books} from './books/books';\n\nexport const NameSpace = {\n  BOOKS: 'BOOKS',\n};\n\nexport default combineReducers({\n  [NameSpace.BOOKS]: books,\n});\n","import {NameSpace} from '../root-reducer';\n\nexport const getBooks = (state) => state[NameSpace.BOOKS].books;\nexport const getIsDataLoaded = (state) => state[NameSpace.BOOKS].isDataLoaded;\nexport const getActiveGroupName = (state) => state[NameSpace.BOOKS].activeGroupName;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport {useSelector, useDispatch} from 'react-redux';\n\nimport {groupList} from '../../const';\nimport {changeGroup} from '../../store/actions';\nimport {getActiveGroupName} from '../../store/books/selectors';\n\nfunction Tabs(props) {\n  const activeGroupName = useSelector(getActiveGroupName);\n  const dispatch = useDispatch();\n\n  const handleTabClick = (evt) => {\n    evt.preventDefault();\n    dispatch(changeGroup(evt.currentTarget.dataset.city));\n  };\n\n  return (\n    <div className=\"tabs\">\n      <section className=\"locations container\">\n        <ul className=\"locations__list tabs__list\">\n          {groupList.map((group) => (\n            <li className=\"locations__item\" key={group}>\n              <Link\n                data-city={group}\n                className={`locations__item-link tabs__item ${ group === activeGroupName && 'tabs__item--active' }`}\n                to=\"#\"\n                onClick={handleTabClick}\n              >\n                <span>{group}</span>\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </section>\n    </div>\n  );\n}\n\nexport default Tabs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction MainEmpty(props) {\n  const {activeGroupName} = props;\n\n  return (\n    <div className=\"cities\">\n      <div className=\"cities__places-container cities__places-container--empty container\">\n        <section className=\"cities__no-places\">\n          <div className=\"cities__status-wrapper tabs__content\">\n            <b className=\"cities__status\">No books available</b>\n            <p className=\"cities__status-description\">We could not find any books available at the moment in \"{activeGroupName}\" group</p>\n          </div>\n        </section>\n        <div className=\"cities__right-section\" />\n      </div>\n    </div>\n  );\n}\n\nMainEmpty.propTypes = {\n  activeGroupName: PropTypes.string.isRequired,\n};\n\nexport default MainEmpty;\n","import React from 'react';\r\nimport {useSelector} from 'react-redux';\r\n\r\nimport ContactList from '../book-list/book-list';\r\nimport withLayout from '../hocs/with-layout';\r\nimport Tabs from '../tabs/tabs';\r\n\r\nimport Util from '../../util/util';\r\nimport MainEmpty from '../main-empty/main-empty';\r\nimport {getBooks, getActiveGroupName} from '../../store/books/selectors';\r\n\r\nfunction Main() {\r\n  const activeGroupName = useSelector(getActiveGroupName);\r\n  const books = useSelector(getBooks);\r\n\r\n  const filteredBooks = Util.getFavoritesBooks(activeGroupName, books);\r\n\r\n  return (\r\n    <main className=\"page__main page__main--index\">\r\n      <h1 className=\"visually-hidden\">Cities</h1>\r\n      <Tabs />\r\n      {\r\n        filteredBooks.length === 0\r\n          ? <MainEmpty activeGroupName={activeGroupName}/>\r\n          : (\r\n            <div className=\"cities\">\r\n              <div className=\"cities__places-container container\">\r\n                <section className=\"cities__places places\">\r\n                  <h2 className=\"visually-hidden\">Books</h2>\r\n                  <b className=\"places__found\">{filteredBooks.length} books in `{activeGroupName}` group</b>\r\n                  <ContactList\r\n                    items={filteredBooks}\r\n                    // first page number\r\n                    initialPageNumber={0}\r\n                    activeTabName={activeGroupName}\r\n                    activeBooks={filteredBooks}\r\n                  />\r\n                </section>\r\n              </div>\r\n            </div>\r\n          )\r\n      }\r\n    </main>\r\n  );\r\n}\r\n\r\nconst withLayoutMain = withLayout(Main);\r\nexport default withLayoutMain;\r\n","import React from 'react';\nimport withLayout from '../hocs/with-layout';\n\nfunction NotFound() {\n  return (\n    <div style={{margin: 'auto', width: '200px'}}>\n      <h1 style={{textAlign: 'center'}}>404</h1>\n      <h2>Page Not Found</h2>\n    </div>\n  );\n}\n\nconst withLayoutNotFound = withLayout(NotFound);\nexport default withLayoutNotFound;\n","import React from 'react';\n\nfunction LoadingScreen() {\n  return (\n    <p className=\"loading\">Loading...</p>\n  );\n}\n\nexport default LoadingScreen;\n","import React from 'react';\nimport {useSelector} from 'react-redux';\nimport {Switch, Route, HashRouter as BrowserRouter} from 'react-router-dom';\n\nimport {AppRoute} from '../../const';\nimport Main from '../main/main';\nimport Error from '../not-found/not-found';\nimport LoadingScreen from '../loading-screen/loading-screen';\nimport {getIsDataLoaded} from '../../store/books/selectors';\n\nfunction App() {\n  const isDataLoaded = useSelector(getIsDataLoaded);\n\n  if (!isDataLoaded) {\n    return (\n      <LoadingScreen />\n    );\n  }\n\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path={AppRoute.MAIN}>\n          <Main className=\"page page--gray page--index\" />\n        </Route>\n        <Route>\n          <Error />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import {createBrowserHistory} from 'history';\n\nconst browserHistory = createBrowserHistory();\n\nexport default browserHistory;\n","import browserHistory from '../../browser-history';\nimport {ActionType} from '../actions';\n\nexport const redirect = (_store) => (next) => (action) => {\n  if (action.type === ActionType.REDIRECT_TO_ROUTE) {\n    browserHistory.push(action.payload);\n  }\n\n  return next(action);\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {configureStore} from '@reduxjs/toolkit';\nimport {Provider} from 'react-redux';\n\nimport {getAxiosInstance} from './services/api';\nimport App from './components/app/app';\nimport rootReducer from './store/root-reducer';\nimport {fetchBooksList} from './store/api-actions';\nimport {redirect} from './store/middlewares/redirect';\nimport reportWebVitals from './reportWebVitals';\n\nconst api = getAxiosInstance();\n\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      thunk: {\n        extraArgument: api,\n      },\n    }).concat(redirect),\n});\n\nstore.dispatch(fetchBooksList());\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import axios from 'axios';\n\nconst BACKEND_URL = 'https://jetstyle-api.herokuapp.com';\nconst REQUEST_TIMEOUT = 5000;\n\nexport const getAxiosInstance = () => {\n  const axiosInstance = axios.create({\n    baseURL: BACKEND_URL,\n    timeout: REQUEST_TIMEOUT\n  });\n\n  axiosInstance.defaults.headers.post['Content-Type'] = 'application/json';\n\n  const onSuccess = (response) => response;\n\n  const onFail = () => {};\n\n  axiosInstance.interceptors.response.use(onSuccess, onFail);\n\n  return axiosInstance;\n};\n"],"sourceRoot":""}
{"version":3,"sources":["services/api.js","const.js","components/book/book.jsx","components/book/book.prop.js","components/pagination/pagination.jsx","components/book-list/book-list.jsx","components/layout/layout.jsx","components/hocs/with-layout.jsx","store/actions.js","util/util.js","store/books/books.js","store/root-reducer.js","store/books/selectors.js","components/tabs/tabs.jsx","components/main-empty/main-empty.jsx","components/main/main.jsx","components/not-found/not-found.jsx","components/loading-screen/loading-screen.jsx","components/app/app.jsx","browser-history.js","store/middlewares/redirect.js","reportWebVitals.js","index.js","store/api-actions.js"],"names":["token","localStorage","getItem","AppRoute","groupList","groupNames","APIRoute","Book","props","id","title","author","group","img","className","src","alt","PropTypes","shape","number","isRequired","string","oneOfType","oneOf","Pagination","pageCount","onPageNumberClick","forcePage","previousLabel","nextLabel","breakLabel","breakClassName","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","activeClassName","prevTabName","ContactList","items","initialPageNumber","activeTabName","selectedItemsOnFirstPage","slice","pagesTotalAmount","Math","ceil","length","slicedItems","useReducer","state","action","type","pageNumber","payload","Error","dispatch","useEffect","map","book","dataPagination","offset","selected","Layout","children","withLayout","Component","displayName","ActionType","changeGroup","createAction","groupName","loadBooks","books","changeFavorite","newPlace","url","Util","offerFromServer","adaptedOfferForClient","Object","assign","host","avatarUrl","avatar_url","isPro","is_pro","isFavorite","is_favorite","isPremium","is_premium","maxAdults","max_adults","previewImage","preview_image","placesFromServer","place","adaptToClient","activeGroup","filter","item","favorite","listLength","Array","fill","nanoid","newContact","newBooks","index","findIndex","contact","formatDate","dateString","Date","toLocaleDateString","year","month","createReducer","isDataLoaded","activeGroupName","builder","addCase","places","getUpdatedBooks","NameSpace","combineReducers","getBooks","getIsDataLoaded","getActiveGroupName","Tabs","useSelector","useDispatch","handleTabClick","evt","preventDefault","currentTarget","dataset","city","to","onClick","MainEmpty","withLayoutMain","filteredBooks","getFavoritesBooks","withLayoutNotFound","style","margin","width","textAlign","LoadingScreen","App","exact","path","browserHistory","createBrowserHistory","redirect","_store","next","push","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","api","axiosInstance","axios","create","baseURL","timeout","headers","interceptors","response","use","getAxiosInstance","store","configureStore","reducer","rootReducer","middleware","getDefaultMiddleware","thunk","extraArgument","concat","_getState","get","data","catch","err","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.10c54684.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst BACKEND_URL = 'https://jetstyle-api.herokuapp.com';\nconst REQUEST_TIMEOUT = 5000;\n\nconst token = localStorage.getItem('token') !== null ? localStorage.getItem('token') : '';\n\nexport const getAxiosInstance = () => {\n  const axiosInstance = axios.create({\n    baseURL: BACKEND_URL,\n    timeout: REQUEST_TIMEOUT,\n    headers: {\n      'x-token': token,\n    },\n  });\n\n  const onSuccess = (response) => response;\n\n  const onFail = () => {};\n\n  axiosInstance.interceptors.response.use(onSuccess, onFail);\n\n  return axiosInstance;\n};\n","export const AppRoute = {\n  MAIN: '/',\n};\n\nexport const defaultImg = 'https://iupac.org/wp-content/uploads/2018/05/default-avatar.png';\n\nexport const groupList = [\n  'All',\n  'Favorites'\n];\n\nexport const groupNames = {\n  ALL: 'All',\n  FAVORITES: 'Favorites',\n}\n\nexport const APIRoute = {\n  BOOKS: '/books',\n  FAVORITE: '/favorite',\n  GROUPS: '/groups',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {defaultImg} from '../../const';\n\nfunction Book(props) {\n  const {\n    id,\n    title,\n    author,\n    group,\n    img\n  } = props;\n\n  return (\n    <li\n      className=\"contact\"\n      id={id}\n    >\n      <img className=\"contact__left\" src={img === null ? defaultImg : img} alt=\"avatar\"></img>\n      <div className=\"contact__right\">\n        <p className=\"contact__data\">Book Title: <span className=\"contact__name\">{title}</span></p>\n        <p className=\"contact__data\">Author: <span className=\"contact__name\">{author}</span></p>\n        <p className=\"contact__data\">Group: <span className=\"contact__name\">{group}</span></p>\n      </div>\n    </li>\n  );\n}\n\nBook.propTypes = {\n  'id': PropTypes.number.isRequired,\n  'title': PropTypes.string.isRequired,\n  'author': PropTypes.string.isRequired,\n  \"img\": PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.oneOf([null]),\n  ]),\n  \"group\": PropTypes.string,\n};\n\nexport default Book;\n","import PropTypes from 'prop-types';\n\nexport default PropTypes.shape({\n  'id': PropTypes.number.isRequired,\n  'title': PropTypes.string.isRequired,\n  'author': PropTypes.string.isRequired,\n  \"img\": PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.oneOf([null]),\n  ]),\n  \"group\": PropTypes.string,\n});\n","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nimport ReactPaginate from 'react-paginate';\r\n\r\nconst Pagination = (props) => {\r\n  const {\r\n    pageCount,\r\n    onPageNumberClick,\r\n    forcePage\r\n  } = props;\r\n\r\n  return (\r\n    <ReactPaginate\r\n      previousLabel={'previous'}\r\n      nextLabel={'next'}\r\n      breakLabel={'...'}\r\n      breakClassName={'break-me'}\r\n      pageCount={pageCount}\r\n      marginPagesDisplayed={2}\r\n      pageRangeDisplayed={3}\r\n      onPageChange={onPageNumberClick}\r\n      containerClassName={'pagination'}\r\n      activeClassName={'active'}\r\n      forcePage={forcePage}\r\n    />\r\n  );\r\n};\r\n\r\nPagination.propTypes = {\r\n  pageCount: PropTypes.number.isRequired,\r\n  onPageNumberClick: PropTypes.func.isRequired,\r\n  forcePage: PropTypes.number,\r\n};\r\n\r\nexport default Pagination;\r\n","// import React, {useState} from 'react';\r\nimport React, {useReducer, useEffect} from 'react';\r\nimport {Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Book from '../book/book';\r\nimport contactProp from '../book/book.prop';\r\nimport Pagination from '../pagination/pagination';\r\n\r\nconst FIRST_PAGE_NUMBER = 0; // the initialPageNumber starts with zero\r\nconst ITEMS_PER_PAGE = 3;\r\nlet prevTabName = '';\r\n\r\nfunction ContactList(props) {\r\n  const {\r\n    items,\r\n    initialPageNumber,\r\n    activeTabName\r\n  } = props;\r\n\r\n  const selectedItemsOnFirstPage = items.slice(0, ITEMS_PER_PAGE);\r\n  const pagesTotalAmount = Math.ceil(items.length / ITEMS_PER_PAGE);\r\n\r\n  let slicedItems = selectedItemsOnFirstPage;\r\n\r\n  const init = (initialPageNumber) => {\r\n    return {\r\n      pageNumber: initialPageNumber,\r\n      slicedItems: slicedItems\r\n    };\r\n  }\r\n\r\n  const reducer = (state, action) => {\r\n    switch (action.type) {\r\n      case 'changePageNumber':\r\n        return {...state, pageNumber: action.payload};\r\n      case 'changeSlicedItems':\r\n        return {...state, slicedItems: action.payload};\r\n      default:\r\n        throw new Error();\r\n    }\r\n  }\r\n\r\n  const [state, dispatch] = useReducer(reducer, initialPageNumber, init);\r\n\r\n  useEffect(() => {\r\n    if (prevTabName !== activeTabName) {\r\n      dispatch({type: 'changeSlicedItems', payload: []});\r\n      dispatch({type: 'changeSlicedItems', payload: slicedItems});\r\n      dispatch({type: 'changePageNumber', payload: FIRST_PAGE_NUMBER});\r\n    }\r\n    prevTabName = activeTabName;\r\n  }, [activeTabName, slicedItems]);\r\n\r\n\r\n  const pageNumberClickHandler = (dataPagination) => {\r\n    let offset = Math.ceil(dataPagination.selected * ITEMS_PER_PAGE);\r\n    slicedItems = items.slice(offset, offset + ITEMS_PER_PAGE);\r\n    dispatch({type: 'changePageNumber', payload: dataPagination.selected});\r\n    dispatch({type: 'changeSlicedItems', payload: slicedItems});\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <ul className=\"cities__places-list places__list tabs__content\">\r\n        {state.slicedItems.map((book) => (\r\n          <Book\r\n            key={book.id}\r\n            id={book.id}\r\n            title={book.title}\r\n            author={book.author}\r\n            group={book.group}\r\n            img={book.img}\r\n          />\r\n        ))}\r\n      </ul>\r\n      {/* comparison was added to don't show pagination if there are too little amount of items in list */}\r\n      {items.length > ITEMS_PER_PAGE && <Pagination\r\n        pageCount={pagesTotalAmount}\r\n        onPageNumberClick={pageNumberClickHandler}\r\n        forcePage={state.pageNumber}\r\n      />}\r\n    </ Fragment>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  items: PropTypes.arrayOf(contactProp),\r\n  initialPageNumber: PropTypes.number,\r\n  activeTabName: PropTypes.string,\r\n  onListItemHover: PropTypes.func,\r\n};\r\n\r\nexport default ContactList;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Layout(props) {\n  const {children, className} = props;\n\n  return (\n    <div className={className}>\n      <header className=\"header\">\n        <div className=\"container\">\n          <div className=\"header__wrapper\">\n            <div className=\"header__left\">\n              <h2 className=\"header__title\">Books</h2>\n            </div>\n          </div>\n        </div>\n      </header>\n      {children}\n    </ div>\n  );\n}\n\nLayout.propTypes = {\n  children: PropTypes.object,\n  className: PropTypes.string,\n};\n\nexport default Layout;\n","import React from 'react';\nimport Layout from '../layout/layout';\n\nconst withLayout = (Component, className) =>\n  function wrapper(props) {\n    return (\n      <Layout className={className}>\n        <Component {...props} />\n      </Layout>\n    );\n  };\n\nwithLayout.displayName = 'withLayout';\n\nexport default withLayout;\n","import {createAction} from '@reduxjs/toolkit';\r\n\r\nexport const ActionType = {\r\n  CHANGE_GROUP: 'books/changeGroup',\r\n  LOAD_BOOKS: 'books/loadBooks',\r\n  CHANGE_FAVORITE: 'books/isFavorite',\r\n  SEND_COMMENT: 'comment/sendComment',\r\n  SEND_COMMENT_RATING: 'comment/sendCommentRating',\r\n  REDIRECT_TO_ROUTE: 'places/redirectToRoute',\r\n};\r\n\r\nexport const changeGroup = createAction(\r\n  ActionType.CHANGE_GROUP,\r\n  (groupName) => ({payload: groupName}),\r\n);\r\n\r\nexport const loadBooks = createAction(\r\n  ActionType.LOAD_BOOKS,\r\n  (books) => ({payload: books}),\r\n);\r\n\r\nexport const changeFavorite = createAction(\r\n  ActionType.CHANGE_FAVORITE,\r\n  (id, newPlace) => ({payload: {id, newPlace}}),\r\n);\r\n\r\nexport const redirectToRoute = createAction(\r\n  ActionType.REDIRECT_TO_ROUTE,\r\n  (url) => ({payload: url}),\r\n);\r\n","import nanoid from 'nanoid';\r\nimport {groupNames} from '../const';\r\n\r\nclass Util {\r\n  static adaptToClient(offerFromServer) {\r\n    const adaptedOfferForClient = Object.assign(\r\n      {},\r\n      offerFromServer,\r\n      {\r\n        host: Object.assign(\r\n          {},\r\n          offerFromServer.host,\r\n          {\r\n            avatarUrl: offerFromServer.host.avatar_url,\r\n            isPro: offerFromServer.host.is_pro,\r\n          },\r\n        ),\r\n        isFavorite: offerFromServer.is_favorite,\r\n        isPremium: offerFromServer.is_premium,\r\n        maxAdults: offerFromServer.max_adults,\r\n        previewImage: offerFromServer.preview_image,\r\n      },\r\n    );\r\n\r\n    // Ненужные ключи мы удаляем\r\n    delete adaptedOfferForClient.host.avatar_url;\r\n    delete adaptedOfferForClient.host.is_pro;\r\n\r\n    delete adaptedOfferForClient.is_favorite;\r\n    delete adaptedOfferForClient.is_premium;\r\n    delete adaptedOfferForClient.max_adults;\r\n    delete adaptedOfferForClient.preview_image;\r\n\r\n    return adaptedOfferForClient;\r\n  }\r\n\r\n  static adaptPlacesToClient(placesFromServer) {\r\n    return placesFromServer.map((place) => this.adaptToClient(place));\r\n  }\r\n\r\n  static getFilteredBooks(activeGroup, books) {\r\n    let filteredBooks = [];\r\n    if (activeGroup === groupNames.ALL) {\r\n      return books;\r\n    }\r\n    filteredBooks = books.filter((item) => item.group === activeGroup);\r\n    return filteredBooks;\r\n  }\r\n\r\n  static getFavoritesBooks(activeGroup, books) {\r\n    let favoritesBooks = [];\r\n    if (activeGroup === groupNames.ALL) {\r\n      return books;\r\n    }\r\n    favoritesBooks = books.filter((item) => item.favorite === true);\r\n    return favoritesBooks;\r\n  }\r\n\r\n  static formatDate = (dateString) => {\r\n    const DATE_OPTIONS = {year: 'numeric', month: 'short'};\r\n\r\n    return (new Date(dateString)).toLocaleDateString('en-US', DATE_OPTIONS);\r\n  }\r\n\r\n  static generateIdKeys(listLength) {\r\n    const list = new Array(listLength).fill('');\r\n    const generatedIdList = list.map(() => nanoid(10));\r\n    return generatedIdList;\r\n  }\r\n\r\n  static getUpdatedBooks(id, books, newContact) {\r\n    const newBooks = [...books];\r\n    const index = newBooks.findIndex((contact) => contact.id === id);\r\n    newBooks[index].isFavorite = newContact.isFavorite;\r\n    return newBooks;\r\n  }\r\n}\r\n\r\nexport default Util;\r\n","import {createReducer} from '@reduxjs/toolkit';\r\nimport Util from '../../util/util';\r\n\r\nimport {\r\n  changeGroup,\r\n  loadBooks,\r\n  changeFavorite,\r\n} from '../actions';\r\n\r\nconst initialState = {\r\n  books: [],\r\n  isDataLoaded: false,\r\n  activeGroupName: 'All',\r\n};\r\n\r\nconst books = createReducer(initialState, (builder) => {\r\n  builder\r\n    .addCase(changeGroup, (state, action) => {\r\n      state.activeGroupName = action.payload;\r\n    })\r\n    .addCase(loadBooks, (state, action) => {\r\n      state.books = action.payload;\r\n      state.isDataLoaded = true;\r\n    })\r\n    .addCase(changeFavorite, (state, action) => {\r\n      state.places = Util.getUpdatedBooks(action.payload.id, state.places, action.payload.newPlace);\r\n    })\r\n});\r\n\r\nexport {books};\r\n","import {combineReducers} from 'redux';\nimport {books} from './books/books';\n\nexport const NameSpace = {\n  BOOKS: 'BOOKS',\n};\n\nexport default combineReducers({\n  [NameSpace.BOOKS]: books,\n});\n","import {NameSpace} from '../root-reducer';\n\nexport const getBooks = (state) => state[NameSpace.BOOKS].books;\nexport const getIsDataLoaded = (state) => state[NameSpace.BOOKS].isDataLoaded;\nexport const getActiveGroupName = (state) => state[NameSpace.BOOKS].activeGroupName;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport {useSelector, useDispatch} from 'react-redux';\n\nimport {groupList} from '../../const';\nimport {changeGroup} from '../../store/actions';\nimport {getActiveGroupName} from '../../store/books/selectors';\n\nfunction Tabs(props) {\n  const activeGroupName = useSelector(getActiveGroupName);\n  const dispatch = useDispatch();\n\n  const handleTabClick = (evt) => {\n    evt.preventDefault();\n    dispatch(changeGroup(evt.currentTarget.dataset.city));\n  };\n\n  return (\n    <div className=\"tabs\">\n      <section className=\"locations container\">\n        <ul className=\"locations__list tabs__list\">\n          {groupList.map((group) => (\n            <li className=\"locations__item\" key={group}>\n              <Link\n                data-city={group}\n                className={`locations__item-link tabs__item ${ group === activeGroupName && 'tabs__item--active' }`}\n                to=\"#\"\n                onClick={handleTabClick}\n              >\n                <span>{group}</span>\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </section>\n    </div>\n  );\n}\n\nexport default Tabs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction MainEmpty(props) {\n  const {activeGroupName} = props;\n\n  return (\n    <div className=\"cities\">\n      <div className=\"cities__places-container cities__places-container--empty container\">\n        <section className=\"cities__no-places\">\n          <div className=\"cities__status-wrapper tabs__content\">\n            <b className=\"cities__status\">No books available</b>\n            <p className=\"cities__status-description\">We could not find any books available at the moment in \"{activeGroupName}\" group</p>\n          </div>\n        </section>\n        <div className=\"cities__right-section\" />\n      </div>\n    </div>\n  );\n}\n\nMainEmpty.propTypes = {\n  activeGroupName: PropTypes.string.isRequired,\n};\n\nexport default MainEmpty;\n","import React from 'react';\r\nimport {useSelector} from 'react-redux';\r\n\r\nimport ContactList from '../book-list/book-list';\r\nimport withLayout from '../hocs/with-layout';\r\nimport Tabs from '../tabs/tabs';\r\n\r\nimport Util from '../../util/util';\r\nimport MainEmpty from '../main-empty/main-empty';\r\nimport {getBooks, getActiveGroupName} from '../../store/books/selectors';\r\n\r\nfunction Main() {\r\n  const activeGroupName = useSelector(getActiveGroupName);\r\n  const books = useSelector(getBooks);\r\n\r\n  const filteredBooks = Util.getFavoritesBooks(activeGroupName, books);\r\n\r\n  return (\r\n    <main className=\"page__main page__main--index\">\r\n      <h1 className=\"visually-hidden\">Cities</h1>\r\n      <Tabs />\r\n      {\r\n        filteredBooks.length === 0\r\n          ? <MainEmpty activeGroupName={activeGroupName}/>\r\n          : (\r\n            <div className=\"cities\">\r\n              <div className=\"cities__places-container container\">\r\n                <section className=\"cities__places places\">\r\n                  <h2 className=\"visually-hidden\">Books</h2>\r\n                  <b className=\"places__found\">{filteredBooks.length} books in `{activeGroupName}` group</b>\r\n                  <ContactList\r\n                    items={filteredBooks}\r\n                    // first page number\r\n                    initialPageNumber={0}\r\n                    activeTabName={activeGroupName}\r\n                  />\r\n                </section>\r\n              </div>\r\n            </div>\r\n          )\r\n      }\r\n    </main>\r\n  );\r\n}\r\n\r\nconst withLayoutMain = withLayout(Main);\r\nexport default withLayoutMain;\r\n","import React from 'react';\nimport withLayout from '../hocs/with-layout';\n\nfunction NotFound() {\n  return (\n    <div style={{margin: 'auto', width: '200px'}}>\n      <h1 style={{textAlign: 'center'}}>404</h1>\n      <h2>Page Not Found</h2>\n    </div>\n  );\n}\n\nconst withLayoutNotFound = withLayout(NotFound);\nexport default withLayoutNotFound;\n","import React from 'react';\n\nfunction LoadingScreen() {\n  return (\n    <p className=\"loading\">Loading...</p>\n  );\n}\n\nexport default LoadingScreen;\n","import React from 'react';\nimport {useSelector} from 'react-redux';\nimport {Switch, Route, HashRouter as BrowserRouter} from 'react-router-dom';\n\nimport {AppRoute} from '../../const';\nimport Main from '../main/main';\nimport Error from '../not-found/not-found';\nimport LoadingScreen from '../loading-screen/loading-screen';\nimport {getIsDataLoaded} from '../../store/books/selectors';\n\nfunction App() {\n  const isDataLoaded = useSelector(getIsDataLoaded);\n\n  if (!isDataLoaded) {\n    return (\n      <LoadingScreen />\n    );\n  }\n\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path={AppRoute.MAIN}>\n          <Main className=\"page page--gray page--index\" />\n        </Route>\n        <Route>\n          <Error />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import {createBrowserHistory} from 'history';\n\nconst browserHistory = createBrowserHistory();\n\nexport default browserHistory;\n","import browserHistory from '../../browser-history';\nimport {ActionType} from '../actions';\n\nexport const redirect = (_store) => (next) => (action) => {\n  if (action.type === ActionType.REDIRECT_TO_ROUTE) {\n    browserHistory.push(action.payload);\n  }\n\n  return next(action);\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {configureStore} from '@reduxjs/toolkit';\nimport {Provider} from 'react-redux';\n\nimport {getAxiosInstance} from './services/api';\nimport App from './components/app/app';\nimport rootReducer from './store/root-reducer';\nimport {fetchBooksList} from './store/api-actions';\nimport {redirect} from './store/middlewares/redirect';\nimport reportWebVitals from './reportWebVitals';\n\nconst api = getAxiosInstance();\n\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      thunk: {\n        extraArgument: api,\n      },\n    }).concat(redirect),\n});\n\nstore.dispatch(fetchBooksList());\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import {\r\n  loadBooks,\r\n  changeFavorite,\r\n} from './actions';\r\n\r\nimport {APIRoute} from '../const';\r\n\r\nexport const fetchBooksList = () => (dispatch, _getState, api) => (\r\n  api.get(APIRoute.BOOKS)\r\n    .then(({data}) => {\r\n      dispatch(loadBooks(data));\r\n    })\r\n    .catch((err) => {})\r\n);\r\n\r\nexport const addToFavorite = (id, isFavorite) => (dispatch, _getState, api) => (\r\n  api.post(`${APIRoute.FAVORITE }/${id}/${isFavorite ? 1 : 0}`)\r\n    .then((info) => {\r\n      dispatch(changeFavorite(id, info.data));\r\n    })\r\n    .catch((err) => {})\r\n);\r\n"],"sourceRoot":""}